// Copyright (c) 1998-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <Standard_NoSuchObject.hxx>
#include <Standard_NoMoreObject.hxx>

// --------------------------------
// constructor of SetIterator
// --------------------------------
PCollection_SetIterator::PCollection_SetIterator
          (const Handle(PCollection_HSet)& S) 
{
     TheIterator = S->Last();
}

// -----------------------------------
// More : returns Standard_True if there 
// are other items
// -----------------------------------
Standard_Boolean PCollection_SetIterator::More() const
{
       return   ! ( TheIterator->IsEmpty() ) ;
}

// -----------------------------------------
// Next : set the iterator to the next item
// -----------------------------------------
void PCollection_SetIterator::Next()
{
    if (TheIterator->IsEmpty())  Standard_NoMoreObject::Raise();  
    TheIterator = TheIterator->Tail();
}

// ---------------------------------------
// Value : returns the current item value 
// of the iterator
// ---------------------------------------
Item PCollection_SetIterator::Value() const
{
    if (TheIterator->IsEmpty())  Standard_NoSuchObject::Raise();  
    return TheIterator->Value();
}
