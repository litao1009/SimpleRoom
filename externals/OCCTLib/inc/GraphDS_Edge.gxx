// Created on: 1993-03-16
// Created by: Denis PASCAL
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <Standard_NoMoreObject.hxx>
#include <Standard_NoSuchObject.hxx>


//=======================================================================
//function : GraphDS_Edge
//purpose  : 
//=======================================================================

GraphDS_Edge::GraphDS_Edge
  (const Handle(GraphDS_Vertex)& source, 
   const Handle(GraphDS_Vertex)& destination, 
   const GraphDS_Attribute& value) : myAttribute (value)
{
  mySource      = source;
  myDestination = destination;
}


//=======================================================================
//function : GetAttribute
//purpose  : 
//=======================================================================

const GraphDS_Attribute& GraphDS_Edge::GetAttribute () const 
{
  return myAttribute;
}


//=======================================================================
//function : SetAttribute
//purpose  : 
//=======================================================================

void GraphDS_Edge::SetAttribute (const GraphDS_Attribute& Value) 
{
  myAttribute = Value;
}

//=======================================================================
//function : Contains
//purpose  : 
//=======================================================================

Standard_Boolean GraphDS_Edge::Contains (const Handle(GraphDS_Vertex)& V) const 
{
  return (mySource == V || myDestination == V);
}

//=======================================================================
//function : Source
//purpose  : 
//=======================================================================

const Handle(GraphDS_Vertex)& GraphDS_Edge::Source () const 
{
  return mySource;
}


//=======================================================================
//function : Destination
//purpose  : 
//=======================================================================

const Handle(GraphDS_Vertex)& GraphDS_Edge::Destination () const 
{
  return myDestination;
}


//=======================================================================
//function : Reverse
//purpose  : 
//=======================================================================

void GraphDS_Edge::Reverse () 
{
  Handle (GraphDS_Vertex) temp = myDestination;
  myDestination = mySource;
  mySource = temp;
}


//=======================================================================
//function : IsLoop
//purpose  : 
//=======================================================================

Standard_Boolean GraphDS_Edge::IsLoop () const 
{
  return (myDestination == mySource);
}










