// Created on: 2003-09-26
// Created by: Open CASCADE Support
// Copyright (c) 2003-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <BRepMesh_DataStructureOfDelaun.hxx>

//=======================================================================
//function : GetDeflection
//purpose  : 
//=======================================================================

inline Standard_Real BRepMesh_FastDiscret::GetDeflection() const
{
  return myDeflection;
}

//=======================================================================
//function : GetAngle
//purpose  : 
//=======================================================================

inline Standard_Real BRepMesh_FastDiscret::GetAngle() const
{
  return myAngle;
}

//=======================================================================
//function : GetMapOfDefEdge
//purpose  : 
//=======================================================================

inline const TopTools_DataMapOfShapeReal& BRepMesh_FastDiscret::GetMapOfDefEdge() const
{
  return myMapdefle;
}

//=======================================================================
//function : EdgesOfDomain
//purpose  : 
//=======================================================================

inline void BRepMesh_FastDiscret::EdgesOfDomain(BRepMesh_MapOfInteger&  Indices) const 
{ 
  Indices = myStructure->LinkOfDomain();
}

//=======================================================================
//function : TrianglesOfDomain
//purpose  : 
//=======================================================================

inline void BRepMesh_FastDiscret::TrianglesOfDomain(BRepMesh_MapOfInteger&  Indices) const 
{ 
  Indices = myStructure->ElemOfDomain();
}

//=======================================================================
//function : NbPoint3d
//purpose  : 
//=======================================================================

inline Standard_Integer BRepMesh_FastDiscret::NbPoint3d() const
{
  return myNbLocat;
}

//=======================================================================
//function : Point3d
//purpose  : 
//=======================================================================

inline const gp_Pnt& BRepMesh_FastDiscret::Point3d(const Standard_Integer Index) const
{
  return myLocation3d(Index);
}

//=======================================================================
//function : WithShare
//purpose  : 
//=======================================================================

inline Standard_Boolean BRepMesh_FastDiscret::WithShare() const
{
  return myWithShare;
}

//=======================================================================
//function : InShape
//purpose  : 
//=======================================================================

inline Standard_Boolean BRepMesh_FastDiscret::InShape() const
{
  return myInshape;
}

//=======================================================================
//function : ShapeTrigu
//purpose  : 
//=======================================================================

inline Standard_Boolean BRepMesh_FastDiscret::ShapeTrigu() const
{
  return myShapetrigu;
}
