// Copyright (c) 1992-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

// Hash.gxx doesn't contains methods. All methods are inline methods.


// methods for hash class from PCollection.
// Written by JPT FEB,24 1992
// -----------------
// Empty constructor
// -----------------
PCollection_Hash::PCollection_Hash(){}


// -----------------------------------------------------------------
// To remove the ambigous compilation warning between Hash::HashCode 
// and Storable::Hashcode
// -----------------------------------------------------------------
//Standard_Integer PCollection_Hash::HashCode
//                    (const Standard_Integer Upper) const { 
      
//   return this % Upper; 
//}

// ------------------------------
// The PCollection::Hascode method
// ------------------------------
Standard_Integer PCollection_Hash::HashCode(const key& K,
						  const Standard_Integer Upper)
const  {

   return ::HashCode(K,Upper);
}


// -----------------------------
// A method to compare two items
// ------------------------------
Standard_Boolean PCollection_Hash::Compare (const key& one,
						  const key& two) const {

  return(one == two);
}



