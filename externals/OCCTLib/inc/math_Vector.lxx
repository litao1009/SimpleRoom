// Copyright (c) 1997-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

// lpa, le 29/10/91

#include <Standard_DimensionError.hxx>

inline Standard_OStream& operator<<(Standard_OStream& o, 
				    const math_Vector& vec) 
{
  vec.Dump(o);
  return o;
}

inline math_Vector operator* (const Standard_Real Left,
			      const math_Vector& Right) 
{
  return Right.Multiplied(Left);
}


inline Standard_Integer math_Vector::Length() const
       { return UpperIndex - LowerIndex +1;}
   // length of a vector.


inline Standard_Integer math_Vector::Lower() const
       { return LowerIndex;}
   // value of the lower index of a vector.


inline Standard_Integer math_Vector::Upper() const
       {return UpperIndex;}
   // value of the Upper index of a vector.


inline Standard_Real& math_Vector::Value(const Standard_Integer Num) const {

  Standard_RangeError_Raise_if(Num < LowerIndex || Num > UpperIndex, " ");
  
  return Array(Num);
} 


