// Created on: 1993-03-16
// Created by: Denis PASCAL
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <Standard_NoMoreObject.hxx>
#include <Standard_NoSuchObject.hxx>

//=======================================================================
//function : GraphDS_EdgesIterator
//purpose  : 
//=======================================================================

GraphDS_EdgesIterator::GraphDS_EdgesIterator ()
{
}


//=======================================================================
//function : GraphDS_EdgesIterator
//purpose  : 
//=======================================================================

GraphDS_EdgesIterator::GraphDS_EdgesIterator 
   (const GraphDS_DirectedGraph& G)
{
  Initialize (G);
}


//=======================================================================
//function : GraphDS_EdgesIterator
//purpose  : 
//=======================================================================

GraphDS_EdgesIterator::GraphDS_EdgesIterator 
   (const GraphDS_DirectedGraph& G,
    const Handle(GraphDS_Vertex)& V) 
{
  Initialize (G,V);
}


//=======================================================================
//function : Initialize
//purpose  : 
//=======================================================================

void GraphDS_EdgesIterator::Initialize
   (const GraphDS_DirectedGraph& G)
{
  myEdges.Initialize(G.myEdges);
}


//=======================================================================
//function : Initialize
//purpose  : 
//=======================================================================

void GraphDS_EdgesIterator::Initialize
   (const GraphDS_DirectedGraph&,
    const Handle(GraphDS_Vertex)& V) 
{
  myEdges.Initialize(V->GetEdges());
}


//=======================================================================
//function : More
//purpose  : 
//=======================================================================

Standard_Boolean GraphDS_EdgesIterator::More () const 
{
  return myEdges.More();
}


//=======================================================================
//function : Next
//purpose  : 
//=======================================================================

void GraphDS_EdgesIterator::Next ()  
{
  myEdges.Next();
}



//=======================================================================
//function : Value
//purpose  : 
//=======================================================================

const Handle(GraphDS_Edge)& GraphDS_EdgesIterator::Value () const 
{ 
  return  *((Handle(GraphDS_Edge)*)& myEdges.Key());
  //return Handle(GraphDS_Edge)::DownCast(myEdges.Key());
}






