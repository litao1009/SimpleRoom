// Created on: 1993-03-02
// Created by: Remi LEQUETTE
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//=======================================================================
//function : Extent
//purpose  : 
//=======================================================================

inline Standard_Integer TCollection_HSet::Extent() const
{
  return mySet.Extent();
}

//=======================================================================
//function : IsEmpty
//purpose  : 
//=======================================================================

inline Standard_Boolean TCollection_HSet::IsEmpty() const
{
  return mySet.IsEmpty();
}

//=======================================================================
//function : Clear
//purpose  : 
//=======================================================================

inline void TCollection_HSet::Clear() 
{
  mySet.Clear();
}

//=======================================================================
//function : Add
//purpose  : 
//=======================================================================

inline Standard_Boolean TCollection_HSet::Add(const Item& T)
{
  return mySet.Add(T);
}

//=======================================================================
//function : Remove
//purpose  : 
//=======================================================================

inline Standard_Boolean TCollection_HSet::Remove(const Item& T)
{
  return mySet.Remove(T);
}

//=======================================================================
//function : Contains
//purpose  : 
//=======================================================================

inline Standard_Boolean TCollection_HSet::Contains(const Item& T) const
{
  return mySet.Contains(T);
}

//=======================================================================
//function : IsASubset
//purpose  : 
//=======================================================================

inline Standard_Boolean TCollection_HSet::IsASubset
  (const Handle(TCollection_HSet)& S) const
{
  return mySet.IsASubset(S->Set());
}

//=======================================================================
//function : IsAProperSubset
//purpose  : 
//=======================================================================

inline Standard_Boolean TCollection_HSet::IsAProperSubset
  (const Handle(TCollection_HSet)& S) const
{
  return mySet.IsAProperSubset(S->Set());
}

//=======================================================================
//function : Set
//purpose  : 
//=======================================================================

inline const TheSet& TCollection_HSet::Set() const
{
  return mySet;
}

//=======================================================================
//function : ChangeSet
//purpose  : 
//=======================================================================

inline TheSet& TCollection_HSet::ChangeSet()
{
  return mySet;
}
