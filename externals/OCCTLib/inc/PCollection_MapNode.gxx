// Created on: 1993-01-11
// Created by: Mireille MERCIEN
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//----------------------------------------------------------------- 
// Constructor 
//----------------------------------------------------------------- 
PCollection_MapNode::PCollection_MapNode(const Key& aKey,
                         const Item& anItem,
                         const Handle(PCollection_MapNode)& aNext)
{
   myKey  = aKey;
   myItem = anItem;
   myNext = aNext;
}

//----------------------------------------------------------------- 
// GetKey
//----------------------------------------------------------------- 
Key PCollection_MapNode::GetKey() const 
{
   return myKey;
} 

//----------------------------------------------------------------- 
// Value
//----------------------------------------------------------------- 
Item PCollection_MapNode::Value() const 
{
   return myItem;
} 

//----------------------------------------------------------------- 
// Next
//----------------------------------------------------------------- 
Handle(PCollection_MapNode) PCollection_MapNode::Next() const 
{
   return myNext;
} 


//----------------------------------------------------------------- 
// SetKey
//----------------------------------------------------------------- 
void PCollection_MapNode::SetKey(const Key& aKey)  
{
   myKey = aKey;
} 


//----------------------------------------------------------------- 
// SetValue
//----------------------------------------------------------------- 
void PCollection_MapNode::SetValue(const Item& anItem) 
{
   myItem = anItem;
} 

//----------------------------------------------------------------- 
// SetNext
//----------------------------------------------------------------- 
void PCollection_MapNode::SetNext
                       (const Handle(PCollection_MapNode)& aNext)
{
   myNext = aNext;
} 

//----------------------------------------------------------------- 
// ShallowCopy : ShallowCopy redefinition
//----------------------------------------------------------------- 
Handle(Standard_Persistent) PCollection_MapNode::ShallowCopy() const
{
   Handle(PCollection_MapNode) TheCopy;
   TheCopy = new PCollection_MapNode(myKey,myItem,myNext);
   return TheCopy;
}

//----------------------------------------------------------------- 
// ShallowDump : ShallowDump redefinition
//----------------------------------------------------------------- 
void PCollection_MapNode::ShallowDump(Standard_OStream& S) const
{
  S << "begin class MapNode "<< endl;
  Handle(PCollection_MapNode) anode;
  anode = this;
  ::ShallowDump(anode->GetKey(),S);
  ::ShallowDump(anode->Value(),S);
  if (!myNext.IsNull()) myNext->ShallowDump(S);
  S << "end of class MapNode." << endl;
}







