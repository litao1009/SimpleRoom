// Created on: 1994-09-19
// Created by: Gilles DEBARBOUILLE
// Copyright (c) 1994-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//=======================================================================
//function : Dynamic_Node
//purpose  : 
//=======================================================================

Dynamic_Node::Dynamic_Node()
{
}

//=======================================================================
//function : Dynamic_Node
//purpose  : 
//=======================================================================

Dynamic_Node::Dynamic_Node(const Handle(Item)& anitem)
{
  theitem = anitem;
}

//=======================================================================
//function : Object
//purpose  : 
//=======================================================================

void Dynamic_Node::Object(const Handle(Item)& anitem)
{
  theitem = anitem;
}

//=======================================================================
//function : Object
//purpose  : 
//=======================================================================

Handle(Item) Dynamic_Node::Object() const
{
  return theitem;
}

//=======================================================================
//function : Next
//purpose  : 
//=======================================================================

void Dynamic_Node::Next(const Handle(Dynamic_Node)& anode)
{
  thenextnode = anode;
}

//=======================================================================
//function : Next
//purpose  : 
//=======================================================================

Handle(Dynamic_Node) Dynamic_Node::Next() const
{
  return thenextnode;
}
