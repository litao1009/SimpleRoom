// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Prs3d_DimensionAspect_HeaderFile
#define _Prs3d_DimensionAspect_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_Prs3d_DimensionAspect_HeaderFile
#include <Handle_Prs3d_DimensionAspect.hxx>
#endif

#ifndef _Handle_Prs3d_LineAspect_HeaderFile
#include <Handle_Prs3d_LineAspect.hxx>
#endif
#ifndef _Handle_Prs3d_TextAspect_HeaderFile
#include <Handle_Prs3d_TextAspect.hxx>
#endif
#ifndef _Handle_Prs3d_ArrowAspect_HeaderFile
#include <Handle_Prs3d_ArrowAspect.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Prs3d_DimensionArrowOrientation_HeaderFile
#include <Prs3d_DimensionArrowOrientation.hxx>
#endif
#ifndef _Prs3d_DimensionTextHorizontalPosition_HeaderFile
#include <Prs3d_DimensionTextHorizontalPosition.hxx>
#endif
#ifndef _Prs3d_DimensionTextVerticalPosition_HeaderFile
#include <Prs3d_DimensionTextVerticalPosition.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _TCollection_AsciiString_HeaderFile
#include <TCollection_AsciiString.hxx>
#endif
#ifndef _Prs3d_BasicAspect_HeaderFile
#include <Prs3d_BasicAspect.hxx>
#endif
class Prs3d_LineAspect;
class Prs3d_TextAspect;
class Prs3d_ArrowAspect;
class Quantity_Color;
class TCollection_AsciiString;


//! defines the attributes when drawing a Length Presentation. <br>
class Prs3d_DimensionAspect : public Prs3d_BasicAspect {

public:

  //! Constructs an empty framework to define the display of dimensions. <br>
  Standard_EXPORT   Prs3d_DimensionAspect();
  //! Returns the settings for the display of lines used in presentation of dimensions. <br>
  Standard_EXPORT     Handle_Prs3d_LineAspect LineAspect() const;
  //! Sets the display attributes of lines used in presentation of dimensions. <br>
  Standard_EXPORT     void SetLineAspect(const Handle(Prs3d_LineAspect)& theAspect) ;
  //! Returns the settings for the display of text used in presentation of dimensions. <br>
  Standard_EXPORT     Handle_Prs3d_TextAspect TextAspect() const;
  //! Sets the display attributes of text used in presentation of dimensions. <br>
  Standard_EXPORT     void SetTextAspect(const Handle(Prs3d_TextAspect)& theAspect) ;
  //! Check if text for dimension label is 3d. <br>
  Standard_EXPORT     Standard_Boolean IsText3d() const;
  //! Sets type of text. <br>
  Standard_EXPORT     void MakeText3d(const Standard_Boolean isText3d) ;
  //! Check if 3d text for dimension label is shaded. <br>
  Standard_EXPORT     Standard_Boolean IsTextShaded() const;
  //! Turns on/off text shading for 3d text. <br>
  Standard_EXPORT     void MakeTextShaded(const Standard_Boolean isTextShaded) ;
  //! Gets type of arrows. <br>
  Standard_EXPORT     Standard_Boolean IsArrows3d() const;
  //! Sets type of arrows. <br>
  Standard_EXPORT     void MakeArrows3d(const Standard_Boolean isArrows3d) ;
  //! Shows if Units are to be displayed along with dimension value. <br>
  Standard_EXPORT     Standard_Boolean IsUnitsDisplayed() const;
  //! Specifies whether the units string should be displayed <br>
//! along with value label or not. <br>
  Standard_EXPORT     void MakeUnitsDisplayed(const Standard_Boolean theIsDisplayed) ;
  //! Sets orientation of arrows (external or internal). <br>
//! By default orientation is chosen automatically according to situation and text label size. <br>
  Standard_EXPORT     void SetArrowOrientation(const Prs3d_DimensionArrowOrientation theArrowOrient) ;
  //! Gets orientation of arrows (external or internal). <br>
  Standard_EXPORT     Prs3d_DimensionArrowOrientation ArrowOrientation() const;
  //! Sets vertical text alignment for text label. <br>
  Standard_EXPORT     void SetTextVerticalPosition(const Prs3d_DimensionTextVerticalPosition thePosition) ;
  //! Gets vertical text alignment for text label. <br>
  Standard_EXPORT     Prs3d_DimensionTextVerticalPosition TextVerticalPosition() const;
  //! Sets horizontal text alignment for text label. <br>
  Standard_EXPORT     void SetTextHorizontalPosition(const Prs3d_DimensionTextHorizontalPosition thePosition) ;
  //! Gets horizontal text alignment for text label. <br>
  Standard_EXPORT     Prs3d_DimensionTextHorizontalPosition TextHorizontalPosition() const;
  //! Returns the settings for displaying arrows. <br>
  Standard_EXPORT     Handle_Prs3d_ArrowAspect ArrowAspect() const;
  //!   Sets the display attributes of arrows used in presentation of dimensions. <br>
  Standard_EXPORT     void SetArrowAspect(const Handle(Prs3d_ArrowAspect)& theAspect) ;
  //! Sets the same color for all parts of dimension: lines, arrows and text. <br>
  Standard_EXPORT     void SetCommonColor(const Quantity_Color& theColor) ;
  //! Sets extension size. <br>
  Standard_EXPORT     void SetExtensionSize(const Standard_Real theSize) ;
  //! Returns extension size. <br>
  Standard_EXPORT     Standard_Real ExtensionSize() const;
  //! Set size for arrow tail (extension without text). <br>
  Standard_EXPORT     void SetArrowTailSize(const Standard_Real theSize) ;
  //! Returns arrow tail size. <br>
  Standard_EXPORT     Standard_Real ArrowTailSize() const;
  //! Sets "sprintf"-syntax format for formatting dimension value labels. <br>
  Standard_EXPORT     void SetValueStringFormat(const TCollection_AsciiString& theFormat) ;
  //! Returns format. <br>
  Standard_EXPORT     TCollection_AsciiString ValueStringFormat() const;




  DEFINE_STANDARD_RTTI(Prs3d_DimensionAspect)

protected:




private: 


Handle_Prs3d_LineAspect myLineAspect;
Handle_Prs3d_TextAspect myTextAspect;
Handle_Prs3d_ArrowAspect myArrowAspect;
Standard_Boolean myIsText3d;
Standard_Boolean myIsTextShaded;
Standard_Boolean myIsArrows3d;
Prs3d_DimensionArrowOrientation myArrowOrientation;
Prs3d_DimensionTextHorizontalPosition myTextHPosition;
Prs3d_DimensionTextVerticalPosition myTextVPosition;
Standard_Real myExtensionSize;
Standard_Real myArrowTailSize;
TCollection_AsciiString myValueStringFormat;
Standard_Boolean myToDisplayUnits;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
