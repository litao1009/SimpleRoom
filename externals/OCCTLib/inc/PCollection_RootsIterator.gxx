// Created on: 1991-05-29
// Created by: Denis PASCAL
// Copyright (c) 1991-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//		<dp>
// Revised by:  Mireille MERCIEN
//              Sep,7 1992

#include <Standard_NoMoreObject.hxx>
#include <Standard_NoSuchObject.hxx>

//---------------------------------------------------------------------------
// Constructor
//---------------------------------------------------------------------------
PCollection_RootsIterator::PCollection_RootsIterator 
     (const Handle(PCollection_HDirectedGraph)& G):MyVertexIterator(G->GetVertices()) 
{
  HasMore = False;
  while ((MyVertexIterator.More()) && (!HasMore)) {
    if (MyVertexIterator.Value()->IsRoot()) 
       HasMore = True;
    else
       MyVertexIterator.Next();
  } 
}


//---------------------------------------------------------------------------
// More
//---------------------------------------------------------------------------
Boolean PCollection_RootsIterator::More () const 
{
  return HasMore;
}


//---------------------------------------------------------------------------
// Next
//---------------------------------------------------------------------------
void PCollection_RootsIterator::Next () 
{
  if (!HasMore) Standard_NoMoreObject::Raise();
  HasMore = False;
  MyVertexIterator.Next();
  while ((MyVertexIterator.More()) && (!HasMore)) {
    if (MyVertexIterator.Value()->IsRoot()) 
      HasMore = True;
    else 
      MyVertexIterator.Next();
  } 
} 


//---------------------------------------------------------------------------
// Value
//---------------------------------------------------------------------------
Handle(PCollection_Vertex) PCollection_RootsIterator::Value () const 
{
  if (!HasMore) Standard_NoSuchObject::Raise();
  return MyVertexIterator.Value();
}


//---------------------------------------------------------------------------
// Clear
//---------------------------------------------------------------------------
void PCollection_RootsIterator::Clear () 
{
// Nullify sur les champs
  HasMore = False;
}

