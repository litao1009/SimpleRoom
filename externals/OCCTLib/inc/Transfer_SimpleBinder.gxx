// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//#include <Transfer_SimpleBinder.ixx>   classe generique


//  "TheResult" identifie la classe donnee en parametre du Resultat


Transfer_SimpleBinder::Transfer_SimpleBinder ()      { }

    Transfer_SimpleBinder::Transfer_SimpleBinder (const TheResult& res)
    : theres (res)
      { SetResultPresent();  }


//    Standard_Boolean  Transfer_SimpleBinder::IsMultiple() const
//      {  return Standard_False;  }


    Handle(Standard_Type)  Transfer_SimpleBinder::ResultType () const
      {  return  TheInfo::Type (theres);  }  // correspond a "STANDARD_TYPE(TheResult)"

    Standard_CString  Transfer_SimpleBinder::ResultTypeName () const
      {  return  TheInfo::TypeName (theres);  }  // correspond a "STANDARD_TYPE(TheResult)"


    void  Transfer_SimpleBinder::SetResult (const TheResult& res)
{
  SetResultPresent();
  theres = res;
}

    const TheResult&  Transfer_SimpleBinder::Result () const
      {  return theres;  }

    TheResult&  Transfer_SimpleBinder::CResult ()
      {  SetResultPresent(); return theres;  }
