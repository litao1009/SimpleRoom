// Created on: 1991-10-23
// Created by: Denis PASCAL
// Copyright (c) 1991-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//		<dp>

#include <Standard_NoMoreObject.hxx>
#include <Standard_NoSuchObject.hxx>


//=======================================================================
//function : GraphTools_AdjSCIterator
//purpose  : 
//=======================================================================
GraphTools_AdjSCIterator::GraphTools_AdjSCIterator ()
{
}


//=======================================================================
//function : GraphTools_AdjSCIterator
//purpose  : 
//=======================================================================
GraphTools_AdjSCIterator::GraphTools_AdjSCIterator 
  (const GraphTools_ReducedGraph& RG,
   const Handle(GraphTools_SC)& SC)
{
  Initialize (RG,SC);
}


//=======================================================================
//function : Initialize
//purpose  : 
//=======================================================================
void GraphTools_AdjSCIterator::Initialize
  (const GraphTools_ReducedGraph& RG,
   const Handle(GraphTools_SC)& SC)
{
  myIterator.Initialize(SC->GetFrontSC());
}


//=======================================================================
//function : More
//purpose  : 
//=======================================================================
Standard_Boolean GraphTools_AdjSCIterator::More() const
{
  return myIterator.More();
} 


//=======================================================================
//function : Next
//purpose  : 
//=======================================================================
void GraphTools_AdjSCIterator::Next()
{
  myIterator.Next();
}


//=======================================================================
//function : Value
//purpose  : 
//=======================================================================
Handle(GraphTools_SC) GraphTools_AdjSCIterator::Value () const
{
  return myIterator.Value();
} 








