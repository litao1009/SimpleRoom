#pragma once

#include <string>
#include <boost/optional.hpp>

#define WM_IRR_DLG_MSG						WM_USER+1
#define DEFINE_USER_MESSAGE(msg)			(WM_USER + msg)

enum EUserType
{
	EUT_BEGIN = 100,

//-----------------------------------------------------------------------------户型图
	//画墙
	EUT_ROOMLAYOUT_DRAWLINE,
	//画墙完成
	EUT_ROOMLAYOUT_DRAWLINE_FINISH,

	//画房间
	EUT_ROOMLAYOUT_DRAWROOM,

	//设置临摹图
	EUT_ROOMLAYOUT_PICTURE_SETTING,
	//设置临摹图可见
	EUT_ROOMLAYOUT_PICTURE_VISIBLE,
	//画临摹图参考线
	EUT_ROOMLAYOUT_PICTUREREFLINE_DRAW,
	//设置临摹图参考尺寸
	EUT_ROOMLAYOUT_PICTUREREFLINE_SIZE,
	//设置临摹图透明度
	EUT_ROOMLAYOUT_PICTURE_ALPHA,
	//设置临摹图位置
	EUT_ROOMLAYOUT_PICTURE_POSITION,
	//临摹图设置完成
	EUT_ROOMLAYOUT_PICTURE_FINISH,

	EUT_ROOMLAYOUT_DLG_LINELENGTH_SHOW,
	EUT_ROOMLAYOUT_DLG_LINELENGTH_HIDE,
	EUT_ROOMLAYOUT_LINELENGTH_SET,

	//门
	EUT_ROOMLAYOUT_TEST_DOOR,
	//窗
	EUT_ROOMLAYOUT_TEST_WINDOW,
	//柱
	EUT_ROOMLAYOUT_TEST_PILLAR,

	//墙属性
	EUT_ROOMLAYOUT_WALL_PROPERTY,
	EUT_ROOMLAYOUT_WALL_NONE,
	EUT_ROOMLAYOUT_WALL_UPDATE,
	EUT_ROOMLAYOUT_WALL_MOVE,
	EUT_ROOMLAYOUT_WALL_DELETE,

	//门属性
	EUT_ROOMLAYOUT_DOOR_PROPERTY,
	EUT_ROOMLAYOUT_DOOR_NONE,
	EUT_ROOMLAYOUT_DOOR_ROTATE,
	EUT_ROOMLAYOUT_DOOR_UPDATE,
	EUT_ROOMLAYOUT_DOOR_MOVE,
	EUT_ROOMLAYOUT_DOOR_DELETE,

	//窗属性
	EUT_ROOMLAYOUT_WINDOW_PROPERTY,
	EUT_ROOMLAYOUT_WINDOW_NONE,
	EUT_ROOMLAYOUT_WINDOW_UPDATE,
	EUT_ROOMLAYOUT_WINDOW_MOVE,
	EUT_ROOMLAYOUT_WINDOW_DELETE,

	//房间属性
	EUT_ROOMLAYOUT_ROOM_PROPERTY,
	EUT_ROOMLAYOUT_ROOM_NONE,
	EUT_ROOMLAYOUT_ROOM_UPDATE,

	//柱属性
	EUT_ROOMLAYOUT_PILLAR_PROPERTY,
	EUT_ROOMLAYOUT_PILLAR_NONE,
	EUT_ROOMLAYOUT_PILLAR_UPDATE,
	EUT_ROOMLAYOUT_PILLAR_MOVE,
	EUT_ROOMLAYOUT_PILLAR_DELETE,
//-----------------------------------------------------------------------------户型图

	EUT_END
};

class	SEventDoorInfo
{
public:

	enum EOpenSide
	{
		EOS_LEFT,
		EOS_RIGHT
	};

	float	XLength_,YLength_,ZLength_;
	boost::optional<EOpenSide>	OpenSide_;
};

class	SEventWindowInfo
{
public:
	float	XLength_,YLength_,ZLength_;
	float	OffsetHeight_;
};

class	SEventWallInfo
{
public:
	float	Thickness_;
	float	Height_;
};

class	SEventRoomInfo
{
public:
	std::wstring	Name_;
};

class	SEventPillarInfo
{
public:
	float	XLength_,YLength_,ZLength_;
	float	OffsetHeight_;
};


#define WM_USER_ROOMLAYOUT_PICTUREREFLINE_SIZE	DEFINE_USER_MESSAGE(EUT_ROOMLAYOUT_PICTUREREFLINE_SIZE)

#define WM_USER_ROOMLAYOUT_DLG_LINELENGTH_SHOW	DEFINE_USER_MESSAGE(EUT_ROOMLAYOUT_DLG_LINELENGTH_SHOW)
#define WM_USER_ROOMLAYOUT_DLG_LINELENGTH_HIDE	DEFINE_USER_MESSAGE(EUT_ROOMLAYOUT_DLG_LINELENGTH_HIDE)
#define WM_USER_ROOMLAYOUT_LINELENGTH_SET		DEFINE_USER_MESSAGE(EUT_ROOMLAYOUT_LINELENGTH_SET)
#define WM_USER_ROOMLAYOUT_WALL_PROPERTY		DEFINE_USER_MESSAGE(EUT_ROOMLAYOUT_WALL_PROPERTY)
#define WM_USER_ROOMLAYOUT_DOOR_PROPERTY		DEFINE_USER_MESSAGE(EUT_ROOMLAYOUT_DOOR_PROPERTY)
#define WM_USER_ROOMLAYOUT_WINDOW_PROPERTY		DEFINE_USER_MESSAGE(EUT_ROOMLAYOUT_WINDOW_PROPERTY)
#define WM_USER_ROOMLAYOUT_ROOM_PROPERTY		DEFINE_USER_MESSAGE(EUT_ROOMLAYOUT_ROOM_PROPERTY)
#define WM_USER_ROOMLAYOUT_PILLAR_PROPERTY		DEFINE_USER_MESSAGE(EUT_ROOMLAYOUT_PILLAR_PROPERTY)